@page
@using GameEngine
@model WebApp.Pages.Game.PlayGameModel
<div class="container h-100">
    <div class="row align-items-center h-100">
        <div class="col-6 mx-auto bg-darkblue">
            <div class="jumbotron bg-darkblue lead my-12 display-6">
                <div class="bold-green-text display-8 gametext mx-5">
                    <tr>
                        <td>
                            @GetTurnText()
                        </td>
                        <td style="width: 50px; height: 50px; border-radius: 50%;">
                            <a style="width: 50px; height: 50px; border-radius: 50%;" class="ml-2 btn @GetTurn(Model.Game.PlayerXMoves())"></a>
                        </td>
                    </tr>
                </div>
<br/>
<table class="table table-dark table-hover col-lg-3 col-md-4 col-sm-6 col-xs-12 col-mt-4 mx-auto" style="width: initial">
    <tbody class="bg-green">
    @for (var y = 0; y < Model.Game.BoardHeight; y++)
    {
        <tr>
            @for (var x = 0; x < Model.Game.BoardWidth; x++)
            {
                <td style="padding: 3px; border: 0 solid black;">
                    <a asp-page="./PlayGame" style=" padding-top: 56.25%; border-radius: 50%;" asp-route-onlyComputers="@Model.OnlyComputers" asp-route-gameOver="@Model.GameOver" asp-route-gameId="@Model.GameId" asp-route-col="@x" class="btn @GetGameButton(Model.Game.GetBoard()[y, x])"></a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>
<a class="btn btn-secondary card-link float-left ml-5" asp-page="SavePage" asp-route-gameOver="@Model.GameOver" asp-route-gameId="@Model.GameId">Save</a>
<a class="btn btn-secondary ml-2" asp-page="../Index">Return to Menu</a>
</div>
</div>
</div>
</div>
@functions
{

    string GetGameButton(CellState cellState)
    {
        return cellState switch
        {
            CellState.Empty => "bg-white",
            CellState.X => "bg-red",
            CellState.O => "bg-dark",
            _ => "bg-white"
            };
    }

    string GetTurn(bool playerXTurn)
    {
        return Model.GameOver ? "bg-darkblue" : Model.PlayerXTurn ? "bg-red" : "bg-dark";
    }

    string GetPlayerName(bool playerXTurn)
    {
        return Model.PlayerXTurn ? Model.Game.Player2Name : Model.Game.Player1Name;
    }

    string GetTurnText()
    {
        return Model.GameOver ? Model.GameOverMessage : $"{GetPlayerName(Model.PlayerXTurn)}'s turn";
    }
}
